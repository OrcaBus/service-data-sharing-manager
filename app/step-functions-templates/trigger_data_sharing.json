{
  "StartAt": "Start Packaging",
  "States": {
    "Start Packaging": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Output": "{% $states.result.Payload %}",
      "Arguments": {
        "FunctionName": "",
        "Payload": "{% $states.input %}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 3,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Next": "Wait for Status Check"
    },
    "Wait for Status Check": {
      "Type": "Wait",
      "Seconds": 5,
      "Next": "Check Packaging Status"
    },
    "Check Packaging Status": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Output": "{% $states.result.Payload %}",
      "Arguments": {
        "FunctionName": "",
        "Payload": "{% $states.input %}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 3,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Next": "Is Packaging Complete?"
    },
    "Is Packaging Complete?": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Initiate Data Copy",
          "Condition": "{% ($.ready) = (true) %}"
        }
      ],
      "Default": "Wait for Status Check"
    },
    "Initiate Data Copy": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Output": "{% $states.result.Payload %}",
      "Arguments": {
        "FunctionName": "",
        "Payload": "{% $states.input %}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 3,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Next": "Send Auto Sharing Completion Event"
    },
    "Send Auto Sharing Completion Event": {
      "Type": "Task",
      "Resource": "arn:aws:states:::events:putEvents.waitForTaskToken",
      "Arguments": {
        "Entries": [
          {
            "Detail": {
              "Message": "Hello from Step Functions!",
              "TaskToken": "{% $states.context.Task.Token %}"
            },
            "DetailType": "MyDetailType",
            "EventBusName": "MyEventBusName",
            "Source": "MySource"
          }
        ]
      },
      "End": true
    }
  },
  "QueryLanguage": "JSONata"
}
